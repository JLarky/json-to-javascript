samples:
  plain_safe: |-
    Line one
    Line two
    Line three
  with_backtick: |-
    First line with `tick`
    Second line
  with_dollar: |-
    Amount: $123
    Breakdown: $45 + $78
  with_double_dollar: |-
    Literal dollar: $$
    Amount: $$100
    Multiple: $$$$200
  with_backslash: |-
    C:\Program Files\App
    Next line\ending
  mixed_risky: |-
    `Code` $var \path
    Second ${line} here
  trailing_spaces: |-
    Line A  
    Line B   
      Line C    
  leading_and_blank: |
    

    Alpha

    Beta


    Gamma
  emoji_unicode: |-
    Status: âœ…
    Rocket: ðŸš€
    Faces: ðŸ˜€ðŸ˜ƒðŸ˜„
  crlf_variant: "Line1\r\nLine2\r\nLine3"
  escaped_vs_real: |-
    Real line 1
    Real line 2\nEscaped newline sequence literal\nAnother line
  deep_indent_literal: |
    function someCode() {
        if (test) {
            console.log("indented block");
        }
    }
  deep_indent_folded: |
    function someCode() {
        if (test) {
            console.log("indented block");
        }
    }
  github_expression_step: |
    echo "::set-output name=tag::${GITHUB_REF##*/}" # risky due to ${}
    echo "Branch is ${GITHUB_REF}"
  github_expression_inline: |-
    First ${GITHUB_REF} second ${GITHUB_SHA}
    Third line
  heredoc_script: |
    cat <<'EOF'
    line with $DOLLAR and `backtick` and \ backslash
    second line
    EOF
  fenced_code_block: |
    ```bash
    echo "Hello $USER" # inside code fence
    echo `date`
    ```
  mixed_markup: |
    ### Heading Level 3
    Paragraph with *italic* and **bold** and `$inline` code.
    List:
    - Item 1
    - Item 2 with `tick` and $amount
  block_with_trailing_ws: |
    line with two spaces  
    line with tab	
    line with mix
  folded_ending_blank: |
    This is a folded line followed by another
  literal_start_blank: |
    
    Indented after blank
    Second line
  looks_like_template: |-
    ${notActually} plain text
    Another line
  json_like: |
    {
      "name": "Example",
      "value": "Some $value with `tick` and \\backslash"
    }
  yaml_in_yaml: |
    key: value
    other: $money
    note: `inline`
  backslash_continuations: |
    echo "first line" \
    echo "second line" \
    echo "third line"
  varying_indent: |
    no indent
      two spaces
        four spaces
          six spaces
  empty_multiline: |+
    


  stale-pr-message: |
    No PR activity in 30 days.
  run: |
    curl -L \
    -X POST \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer ${{ secrets.GHA_PAT }}" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    -d '{"labels":["stale"]}'
  escaped_backticks_code: >
    const commentBody = `string with ticks in it \`git rebase -i\`\nlast
    line`\n    echo "Done"
  script: |
    const body = `
      Commit: ${process.env.COMMIT_SHA}
      Run: ${github.run_id}
      Tip: use \`git rebase -i\` to adjust commits.
      Review changes or ignore.
    `;
    console.log(body);
meta:
  description: Synthetic cases for classifier evolution
  version: 1
messages:
  simple: Hello World
  multiline_plain: |-
    Line1
    Line2
    Line3
  multiline_with_backtick: |-
    Here is a `code` sample
    Second line
  multiline_with_dollar: |-
    Total is $100
    Breakdown line
  multiline_with_backslash: |-
    Path C:\Program Files\App
    Next line
  block_literal: |
    First block line
    Second block line with $
    Third block line with `backtick`
    Fourth line with a backslash \
  block_folded: >
    Folded text first line second line with backslash \ third line containing $
    final line with `tick`
nested:
  level1:
    level2:
      multiline: |
        Alpha
        Beta
        Gamma with $ and ` and \
list_examples:
  - Single line
  - |-
    Line A
    Line B
  - |
    Block item line 1
    Block item line 2 with $
    Block item line 3 with \
  - |
    Folded item first folded item second with ` folded item third
