[tasks.wf-install]
description = "Install dependencies with Node"
tools.bun = "1.3"
run = "cd .github/workflows && bun install"

[tasks.wf-install-ci]
description = "Install only production dependencies"
tools.bun = "1.3"
run = "cd .github/workflows && bun install --frozen-lockfile --omit=dev"

[tasks.wf-clear]
description = "Clear generated workflows"
run = "rm -f .github/workflows/*.generated.yml"

[tasks.wf-build]
tools.bun = "1.3"
run = ".github/workflows/utils/build-cli.ts"

[tasks.wf-watch]
tools.bun = "1.3"
run = "bun --watch .github/workflows/utils/build-cli.ts"

[tasks.install]
description = "Install dependencies with Bun"
tools.bun = "1.3"
run = "bun install"

[tasks.test]
depends = ["install"]
description = "Run tests with Bun"
tools.bun = "1.3"
tools.node = "24"
run = "bun test"

[tasks.format]
tools.prettier = "latest"
run = "prettier . --write"

[tasks."format-check"]
tools.prettier = "latest"
run = "prettier . --check"

[tasks.jsr]
depends = ["install", "test"]
description = "Run jsr commands"
tools.bun = "1.3"
run = "bunx jsr"

[tasks."clone-to-npm:ci"]
description = "Clone to npm (CI)"
tools.bun = "1.3"
run = "mise run clone-to-npm"

[tasks."bump-version"]
description = "Bump version"
tools.bun = "1.3"
run = '''
#!/usr/bin/env bun
import { $ } from "bun";

const tmpFolder = (await $`mktemp -d`.text()).trim();
await $`cp jsr.json ${tmpFolder}/package.json`;
await $`bun pm pkg get version`.cwd(tmpFolder);
await $`bun pm version patch --no-git-tag-version`.cwd(tmpFolder);
const newVersion = (await $`bun pm pkg get version`.cwd(tmpFolder).text()).trim();
await $`cp ${tmpFolder}/package.json jsr.json`;
await $`rm -rf ${tmpFolder}`;
await $`git commit jsr.json -m "Bump version to ${newVersion}"`;
console.log('Now you can run `git push origin main` to publish the new version');
'''
